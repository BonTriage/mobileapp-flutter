import 'dart:convert';
import 'dart:io';

import 'package:bouncing_widget/bouncing_widget.dart';
import 'package:flutter/material.dart';
import 'package:mobile/util/TabNavigatorRoutes.dart';
import 'package:mobile/util/constant.dart';
import 'package:mobile/view/MoreSection.dart';
import 'package:url_launcher/url_launcher.dart';

class MoreGenerateReportScreen extends StatefulWidget {
  final Function(BuildContext, String, dynamic) onPush;
  final Future<dynamic> Function(String, dynamic) openActionSheetCallback;

  const MoreGenerateReportScreen({Key key, this.onPush, this.openActionSheetCallback})
      : super(key: key);
  @override
  _MoreGenerateReportScreenState createState() => _MoreGenerateReportScreenState();
}

class _MoreGenerateReportScreenState extends State<MoreGenerateReportScreen> {

  String _dateRangeSelected;

  @override
  void initState() {
    super.initState();
    _dateRangeSelected = Constant.last2Weeks;
  }

  @override
  Widget build(BuildContext context) {
    return Container(
        decoration: Constant.backgroundBoxDecoration,
        child: SafeArea(
          child: Padding(
            padding: const EdgeInsets.symmetric(horizontal: 15),
            child: ConstrainedBox(
              constraints: BoxConstraints(
                minHeight: MediaQuery.of(context).size.height,
              ),
              child: SingleChildScrollView(
                child: Column(
                  children: [
                    Column(
                      children: [
                        SizedBox(
                          height: 40,
                        ),
                        GestureDetector(
                          behavior: HitTestBehavior.translucent,
                          onTap: () {
                            Navigator.of(context).pop();
                          },
                          child: Container(
                            padding:
                            EdgeInsets.symmetric(horizontal: 15, vertical: 15),
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(20),
                              color: Constant.moreBackgroundColor,
                            ),
                            child: Row(
                              children: [
                                Image(
                                  width: 16,
                                  height: 16,
                                  image: AssetImage(Constant.leftArrow),
                                ),
                                SizedBox(
                                  width: 10,
                                ),
                                Text(
                                  Constant.generateReport,
                                  style: TextStyle(
                                      color: Constant.locationServiceGreen,
                                      fontSize: 16,
                                      fontFamily: Constant.jostRegular),
                                ),
                              ],
                            ),
                          ),
                        ),
                        SizedBox(
                          height: 40,
                        ),
                        Container(
                          padding:
                          EdgeInsets.symmetric(horizontal: 15, vertical: 15),
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(20),
                            color: Constant.moreBackgroundColor,
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              MoreSection(
                                currentTag: Constant.dateRange,
                                text: Constant.dateRange,
                                moreStatus: _dateRangeSelected,
                                isShowDivider: true,
                                navigateToOtherScreenCallback: _openActionSheet,
                              ),
                              MoreSection(
                                text: Constant.dataToInclude,
                                moreStatus: Constant.all,
                                isShowDivider: false,
                              ),
                              /*MoreSection(
                                text: Constant.fileType,
                                moreStatus: Constant.pdf,
                                isShowDivider: false,
                              ),*/
                            ],
                          ),
                        ),
                      ],
                    ),
                    SizedBox(height: 40,),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        BouncingWidget(
                          onPressed: () {
                            widget.openActionSheetCallback(Constant.generateReportActionSheet, null);
                          },
                          child: Container(
                            padding: EdgeInsets.symmetric(horizontal: 20, vertical: 8),
                            decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(20),
                                color: Constant.chatBubbleGreen
                            ),
                            child: Text(
                              Constant.generateReport,
                              style: TextStyle(
                                  fontSize: 14,
                                  color: Constant.bubbleChatTextView,
                                  fontFamily: Constant.jostMedium,
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          ),
        ),
      );
  }

  void _openActionSheet(String actionSheetIdentifier, dynamic argument) async {
    /*var decodedBytes = base64Decode('');
    final String dir = (await getApplicationDocumentsDirectory()).path;
    final String path = '$dir/bontriage.pdf';
    final File file = File(path);
    file.writeAsBytesSync(decodedBytes);
    print('path????${file.path}');*/
    var resultFromActionSheet = await widget.openActionSheetCallback(Constant.dateRangeActionSheet, null);
    print(resultFromActionSheet);
  }
}
